#include <iostream>
#include<vector>
#include<algorithm>

using namespace std;

//ВКАЗІВНИКИ та ДИНАМІЧНА ПАМ'ЯТЬ (new/delte)
//============================== =


//№1
//
//Дано два масиви : А[M] і B[N](M і N вводяться з клавіатури).
//Необхідно створити третій масив мінімально можливого розміру,
//у якому потрібно зібрати елементи масиву A, які не включаються до масиву B, без повторень.
//
//Приклад :
//	A = [1, 2, 3, 4, 3, 2, 1]
//	B = [3, 4, 5, 6]
//	Результат :
//	Елементи A, яких немає в B : [1, 2]
//
//
//
//	№2
//	Дано два масиви : А[M] і B[N](M і N вводяться з клавіатури).
//	Необхідно створити третій масив мінімально можливого розміру,
//	у якому потрібно зібрати елементи масивів A і B, які не є загальними для них, без повторень.
//	Тобто потрібно сформувати третій масив, що містить тільки ті елементи, які унікальні для кожного з двох масивів, без дублювання.
//
//	Приклад :
//	A = [1, 2, 3, 4]
//	B = [3, 4, 5, 6]
//	Результат : [1, 2, 5, 6]
//
//
//	№3
//	Дано два масиви : А[M] і B[N](M і N вводяться з клавіатури).
//	Необхідно створити третій масив мінімально можливого розміру,
//	у якому потрібно зібрати елементи обох масивів.
//
//
//	Навчальний матеріал
//	https ://fsx1.itstep.org/api/v1/files/Yayh8bbY4WDJDd0IGg5DHbdnQUQlQug_?inline=true

//Дано два масиви : А[M] і B[N](M і N вводяться з клавіатури).
//Необхідно створити третій масив мінімально можливого розміру,
//у якому потрібно зібрати елементи масиву A, які не включаються до масиву B, без повторень.
//
//Приклад :
//	A = [1, 2, 3, 4, 3, 2, 1]
//	B = [3, 4, 5, 6]
//	Результат : 
//	Елементи A, яких немає в B : [1, 2]

void enterNum(int size, int* arr)
{
    cout << "Enter Num for arr :";
	for (int i = 0; i < size; i++)
	{
        cin >> *(arr + i);
	}
}

void ex1(int size, int* arr, int size2, int* arr2, int *arr3)
{
    int sizeV = 0;
    for (int i = 0; i < size; i++)
    {
        for (int j = 0; j < size2; j++)
        {
            if (*(arr + i) != *(arr2 + j))
            {
                sizeV ++;
                break;
            }
        }
    }
    vector <int> arr4(sizeV);
    cout << sizeV;
}

int main()
{
    int size;
    cout << "Enter size for arr 1: ";
    cin >> size;
    int* arr1 = new int[size];
    int size2;
    cout << "Enter size for arr 2: ";
    cin >> size2;
    int* arr2 = new int[size2];

    int maxSize = (size > size2) ? size : size2;
    int* arr3 = new int[maxSize];

    enterNum(size, arr1);
    enterNum(size2, arr2);

    ex1(size, arr1, size2, arr2, arr3);

    delete[] arr1;
    delete[] arr2;
}




