#include <iostream>
#include<vector>
#include<algorithm>

using namespace std;

//ВКАЗІВНИКИ та ДИНАМІЧНА ПАМ'ЯТЬ (new/delte)
//============================== =


//№1
//
//Дано два масиви : А[M] і B[N](M і N вводяться з клавіатури).
//Необхідно створити третій масив мінімально можливого розміру,
//у якому потрібно зібрати елементи масиву A, які не включаються до масиву B, без повторень.
//
//Приклад :
//	A = [1, 2, 3, 4, 3, 2, 1]
//	B = [3, 4, 5, 6]
//	Результат :
//	Елементи A, яких немає в B : [1, 2]
//
//
//
//	№2
//	Дано два масиви : А[M] і B[N](M і N вводяться з клавіатури).
//	Необхідно створити третій масив мінімально можливого розміру,
//	у якому потрібно зібрати елементи масивів A і B, які не є загальними для них, без повторень.
//	Тобто потрібно сформувати третій масив, що містить тільки ті елементи, які унікальні для кожного з двох масивів, без дублювання.
//
//	Приклад :
//	A = [1, 2, 3, 4]
//	B = [3, 4, 5, 6]
//	Результат : [1, 2, 5, 6]
//
//
//	№3
//	Дано два масиви : А[M] і B[N](M і N вводяться з клавіатури).
//	Необхідно створити третій масив мінімально можливого розміру,
//	у якому потрібно зібрати елементи обох масивів.
//
//
//	Навчальний матеріал
//	https ://fsx1.itstep.org/api/v1/files/Yayh8bbY4WDJDd0IGg5DHbdnQUQlQug_?inline=true

//Дано два масиви : А[M] і B[N](M і N вводяться з клавіатури).
//Необхідно створити третій масив мінімально можливого розміру,
//у якому потрібно зібрати елементи масиву A, які не включаються до масиву B, без повторень.
//
//Приклад :
//	A = [1, 2, 3, 4, 3, 2, 1]
//	B = [3, 4, 5, 6]
//	Результат : 
//	Елементи A, яких немає в B : [1, 2]



int main()
{

}




